{"ast":null,"code":"import _slicedToArray from\"C:/Users/Admin/Desktop/Strike_API/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import logo from'./logo.svg';import'./App.css';import React,{useState,useEffect}from'react';import io from'socket.io-client';import GetAccount from'./GetAccount.js';import DisplayAccount from'./DisplayAccount';import QRCard from'./QRCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// establish socket port\nvar socket=io();var _useState=useState(),_useState2=_slicedToArray(_useState,2),userInfo=_useState2[0],setUserInfo=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),invoiceAndQuote=_useState4[0],setInvoiceAndQuote=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),paidIndicator=_useState6[0],setPaidIndicator=_useState6[1];// paid invoices come through as {invoiceId: 1234fake-invoice-id, status: 'PAID'}\nsocket.on('message',function(res){console.log(res);handleSocketMessage(res);});// process the socket message. Check if it's invoiceId matches current invoiceId and check if status is PAID.\nvar handleSocketMessage=function handleSocketMessage(res){console.log(invoiceAndQuote);console.log(invoiceAndQuote.invoice.invoiceId);console.log(res.invoiceId);console.log(res.status);// check to see if invoiceId matches current invoiceId AND is PAID\nif(res.invoiceId==invoiceAndQuote.invoice.invoiceId&&res.status=='PAID'){console.log('Completado');// set paid indicator to true to trigger UI\nsetPaidIndicator(true);// delete invoiceAndQuote object, triggers UI\nsetInvoiceAndQuote(null);}};// accepts the userInfo from the GetAccount component\nvar acceptUserInfo=function acceptUserInfo(uInfo){console.log(uInfo);// save the state of the passed up user's info\nsetUserInfo(uInfo);};// receives the invoiceAndQuote data object from displayAccount\nvar acceptInvoiceAndQuote=function acceptInvoiceAndQuote(invoiceObject){console.log(invoiceObject);setInvoiceAndQuote(invoiceObject);// reset's the paid indicator so that it's no longer rendered.\nsetPaidIndicator(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{}),/*#__PURE__*/_jsx(GetAccount,{passUpUserInfo:acceptUserInfo}),userInfo&&/*#__PURE__*/_jsx(DisplayAccount,{passUpInvoice:acceptInvoiceAndQuote,userInfo:userInfo}),invoiceAndQuote&&/*#__PURE__*/_jsx(QRCard,{invoiceAndQuote:invoiceAndQuote}),paidIndicator&&/*#__PURE__*/_jsx(\"h1\",{children:\" Completado \"})]});}export default App;","map":{"version":3,"names":["logo","React","useState","useEffect","io","GetAccount","DisplayAccount","QRCard","App","socket","userInfo","setUserInfo","invoiceAndQuote","setInvoiceAndQuote","paidIndicator","setPaidIndicator","on","res","console","log","handleSocketMessage","invoice","invoiceId","status","acceptUserInfo","uInfo","acceptInvoiceAndQuote","invoiceObject"],"sources":["C:/Users/Admin/Desktop/Strike_API/client/src/App.js"],"sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, {useState, useEffect} from 'react'\r\nimport io from 'socket.io-client';\r\nimport GetAccount from './GetAccount.js'\r\nimport DisplayAccount from './DisplayAccount'\r\nimport QRCard from './QRCard'\r\n\r\nfunction App() {\r\n\r\n// establish socket port\r\nconst socket = io();\r\n\r\nconst [userInfo, setUserInfo] = useState();\r\nconst [invoiceAndQuote, setInvoiceAndQuote] = useState();\r\nconst [paidIndicator, setPaidIndicator] = useState(false);\r\n\r\n// paid invoices come through as {invoiceId: 1234fake-invoice-id, status: 'PAID'}\r\nsocket.on('message', (res) => {\r\n  console.log(res);\r\n  handleSocketMessage(res);\r\n})\r\n\r\n// process the socket message. Check if it's invoiceId matches current invoiceId and check if status is PAID.\r\nconst handleSocketMessage = (res) => {\r\n  console.log(invoiceAndQuote);\r\n  console.log(invoiceAndQuote.invoice.invoiceId);\r\n  console.log(res.invoiceId);\r\n  console.log(res.status);\r\n  // check to see if invoiceId matches current invoiceId AND is PAID\r\n  if (res.invoiceId == invoiceAndQuote.invoice.invoiceId && res.status == 'PAID') {\r\n    console.log('Completado');\r\n    // set paid indicator to true to trigger UI\r\n    setPaidIndicator(true);\r\n\r\n    // delete invoiceAndQuote object, triggers UI\r\n    setInvoiceAndQuote(null);\r\n  }\r\n}\r\n\r\n// accepts the userInfo from the GetAccount component\r\nconst acceptUserInfo = (uInfo) => {\r\n  console.log(uInfo);\r\n\r\n  // save the state of the passed up user's info\r\n  setUserInfo(uInfo);\r\n}\r\n\r\n// receives the invoiceAndQuote data object from displayAccount\r\nconst acceptInvoiceAndQuote = (invoiceObject) => {\r\n  console.log(invoiceObject);\r\n  setInvoiceAndQuote(invoiceObject);\r\n\r\n  // reset's the paid indicator so that it's no longer rendered.\r\n  setPaidIndicator(false);\r\n}\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <h1></h1>\r\n      <GetAccount passUpUserInfo={acceptUserInfo}/>\r\n      {userInfo && <DisplayAccount passUpInvoice={acceptInvoiceAndQuote} userInfo = {userInfo} /> }\r\n      {invoiceAndQuote && <QRCard invoiceAndQuote={invoiceAndQuote}/>}\r\n      {paidIndicator && <h1> Completado </h1>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"8HAAA,MAAOA,KAAP,KAAiB,YAAjB,CACA,MAAO,WAAP,CACA,MAAOC,MAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,GAAP,KAAe,kBAAf,CACA,MAAOC,WAAP,KAAuB,iBAAvB,CACA,MAAOC,eAAP,KAA2B,kBAA3B,CACA,MAAOC,OAAP,KAAmB,UAAnB,C,wFAEA,QAASC,IAAT,EAAe,CAEf;AACA,GAAMC,OAAM,CAAGL,EAAE,EAAjB,CAEA,cAAgCF,QAAQ,EAAxC,wCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAA8CT,QAAQ,EAAtD,yCAAOU,eAAP,eAAwBC,kBAAxB,eACA,eAA0CX,QAAQ,CAAC,KAAD,CAAlD,yCAAOY,aAAP,eAAsBC,gBAAtB,eAEA;AACAN,MAAM,CAACO,EAAP,CAAU,SAAV,CAAqB,SAACC,GAAD,CAAS,CAC5BC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACAG,mBAAmB,CAACH,GAAD,CAAnB,CACD,CAHD,EAKA;AACA,GAAMG,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACH,GAAD,CAAS,CACnCC,OAAO,CAACC,GAAR,CAAYP,eAAZ,EACAM,OAAO,CAACC,GAAR,CAAYP,eAAe,CAACS,OAAhB,CAAwBC,SAApC,EACAJ,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACK,SAAhB,EACAJ,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACM,MAAhB,EACA;AACA,GAAIN,GAAG,CAACK,SAAJ,EAAiBV,eAAe,CAACS,OAAhB,CAAwBC,SAAzC,EAAsDL,GAAG,CAACM,MAAJ,EAAc,MAAxE,CAAgF,CAC9EL,OAAO,CAACC,GAAR,CAAY,YAAZ,EACA;AACAJ,gBAAgB,CAAC,IAAD,CAAhB,CAEA;AACAF,kBAAkB,CAAC,IAAD,CAAlB,CACD,CACF,CAdD,CAgBA;AACA,GAAMW,eAAc,CAAG,QAAjBA,eAAiB,CAACC,KAAD,CAAW,CAChCP,OAAO,CAACC,GAAR,CAAYM,KAAZ,EAEA;AACAd,WAAW,CAACc,KAAD,CAAX,CACD,CALD,CAOA;AACA,GAAMC,sBAAqB,CAAG,QAAxBA,sBAAwB,CAACC,aAAD,CAAmB,CAC/CT,OAAO,CAACC,GAAR,CAAYQ,aAAZ,EACAd,kBAAkB,CAACc,aAAD,CAAlB,CAEA;AACAZ,gBAAgB,CAAC,KAAD,CAAhB,CACD,CAND,CAQE,mBACE,aAAK,SAAS,CAAC,KAAf,wBACA,aADA,cAEE,KAAC,UAAD,EAAY,cAAc,CAAES,cAA5B,EAFF,CAGGd,QAAQ,eAAI,KAAC,cAAD,EAAgB,aAAa,CAAEgB,qBAA/B,CAAsD,QAAQ,CAAIhB,QAAlE,EAHf,CAIGE,eAAe,eAAI,KAAC,MAAD,EAAQ,eAAe,CAAEA,eAAzB,EAJtB,CAKGE,aAAa,eAAI,oCALpB,GADF,CASD,CAED,cAAeN,IAAf"},"metadata":{},"sourceType":"module"}