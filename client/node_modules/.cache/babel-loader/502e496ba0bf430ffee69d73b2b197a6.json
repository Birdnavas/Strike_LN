{"ast":null,"code":"import _slicedToArray from\"C:/Users/Admin/Desktop/Strike_API/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import CountdownTimer from'./CountdownTimer';import QRCode from'react-qr-code';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var QRCard=function QRCard(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),expired=_useState2[0],setExpired=_useState2[1];console.log(props);var timeInSeconds=props.invoiceAndQuote.quote.expirationInSec*1000;var NOW_IN_MS=new Date().getTime();var targetDate=NOW_IN_MS+timeInSeconds;var receiveExpiredNotice=function receiveExpiredNotice(isExpired){setExpired(isExpired);};return/*#__PURE__*/_jsxs(\"div\",{children:[!expired&&/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\" \",props.invoiceAndQuote.quote.targetAmount.currency,\" : \",props.invoiceAndQuote.quote.targetAmount.amount,\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"QR\",children:/*#__PURE__*/_jsx(QRCode,{value:props.invoiceAndQuote.quote.lnInvoice})}),/*#__PURE__*/_jsx(\"h3\",{children:\" \"})]}),/*#__PURE__*/_jsx(CountdownTimer,{targetDate:targetDate,floatUpExpiredNotice:receiveExpiredNotice})]});};export default QRCard;","map":{"version":3,"names":["React","useState","useEffect","CountdownTimer","QRCode","QRCard","props","expired","setExpired","console","log","timeInSeconds","invoiceAndQuote","quote","expirationInSec","NOW_IN_MS","Date","getTime","targetDate","receiveExpiredNotice","isExpired","targetAmount","currency","amount","lnInvoice"],"sources":["C:/Users/Admin/Desktop/Strike_API/client/src/QRCard.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport CountdownTimer from './CountdownTimer'\r\nimport QRCode from 'react-qr-code'\r\n\r\nconst QRCard = (props) => {\r\n\r\n\tconst [expired, setExpired] = useState(false);\r\n\tconsole.log(props);\r\n\r\n\tconst timeInSeconds = props.invoiceAndQuote.quote.expirationInSec*1000;\r\n  \tconst NOW_IN_MS = new Date().getTime();\r\n\r\n  \tconst targetDate = NOW_IN_MS + timeInSeconds;\r\n\r\n  \tconst receiveExpiredNotice = (isExpired) => {\r\n  \t\tsetExpired(isExpired);\r\n  \t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!expired &&\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<h3> {props.invoiceAndQuote.quote.targetAmount.currency} : {props.invoiceAndQuote.quote.targetAmount.amount} </h3>\r\n\t\t\t\t\t<div className = 'QR'>\r\n\t\t\t\t\t\t<QRCode value={props.invoiceAndQuote.quote.lnInvoice}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3> </h3>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t}\r\n\t\t\t<CountdownTimer targetDate={targetDate} floatUpExpiredNotice={receiveExpiredNotice} />\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default QRCard;\r\n\r\n"],"mappings":"8HAAA,MAAOA,MAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,eAAP,KAA2B,kBAA3B,CACA,MAAOC,OAAP,KAAmB,eAAnB,C,wFAEA,GAAMC,OAAM,CAAG,QAATA,OAAS,CAACC,KAAD,CAAW,CAEzB,cAA8BL,QAAQ,CAAC,KAAD,CAAtC,wCAAOM,OAAP,eAAgBC,UAAhB,eACAC,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAEA,GAAMK,cAAa,CAAGL,KAAK,CAACM,eAAN,CAAsBC,KAAtB,CAA4BC,eAA5B,CAA4C,IAAlE,CACE,GAAMC,UAAS,CAAG,GAAIC,KAAJ,GAAWC,OAAX,EAAlB,CAEA,GAAMC,WAAU,CAAGH,SAAS,CAAGJ,aAA/B,CAEA,GAAMQ,qBAAoB,CAAG,QAAvBA,qBAAuB,CAACC,SAAD,CAAe,CAC3CZ,UAAU,CAACY,SAAD,CAAV,CACA,CAFD,CAIF,mBACC,uBACE,CAACb,OAAD,eACA,MAAC,KAAD,CAAO,QAAP,yBACC,0BAAMD,KAAK,CAACM,eAAN,CAAsBC,KAAtB,CAA4BQ,YAA5B,CAAyCC,QAA/C,OAA4DhB,KAAK,CAACM,eAAN,CAAsBC,KAAtB,CAA4BQ,YAA5B,CAAyCE,MAArG,OADD,cAEC,YAAK,SAAS,CAAG,IAAjB,uBACC,KAAC,MAAD,EAAQ,KAAK,CAAEjB,KAAK,CAACM,eAAN,CAAsBC,KAAtB,CAA4BW,SAA3C,EADD,EAFD,cAKC,yBALD,GAFF,cAUC,KAAC,cAAD,EAAgB,UAAU,CAAEN,UAA5B,CAAwC,oBAAoB,CAAEC,oBAA9D,EAVD,GADD,CAcA,CA5BD,CA8BA,cAAed,OAAf"},"metadata":{},"sourceType":"module"}