{"ast":null,"code":"var BitByte = require('./8BitByte');\n\nvar RSBlock = require('./RSBlock');\n\nvar BitBuffer = require('./BitBuffer');\n\nvar util = require('./util');\n\nvar Polynomial = require('./Polynomial');\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n} // for client side minification\n\n\nvar proto = QRCode.prototype;\n\nproto.addData = function (data) {\n  var newData = new BitByte(data);\n  this.dataList.push(newData);\n  this.dataCache = null;\n};\n\nproto.isDark = function (row, col) {\n  if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n    throw new Error(row + \",\" + col);\n  }\n\n  return this.modules[row][col];\n};\n\nproto.getModuleCount = function () {\n  return this.moduleCount;\n};\n\nproto.make = function () {\n  // Calculate automatically typeNumber if provided is < 1\n  if (this.typeNumber < 1) {\n    var typeNumber = 1;\n\n    for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n      var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n      var buffer = new BitBuffer();\n      var totalDataCount = 0;\n\n      for (var i = 0; i < rsBlocks.length; i++) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      for (var i = 0; i < this.dataList.length; i++) {\n        var data = this.dataList[i];\n        buffer.put(data.mode, 4);\n        buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n        data.write(buffer);\n      }\n\n      if (buffer.getLengthInBits() <= totalDataCount * 8) break;\n    }\n\n    this.typeNumber = typeNumber;\n  }\n\n  this.makeImpl(false, this.getBestMaskPattern());\n};\n\nproto.makeImpl = function (test, maskPattern) {\n  this.moduleCount = this.typeNumber * 4 + 17;\n  this.modules = new Array(this.moduleCount);\n\n  for (var row = 0; row < this.moduleCount; row++) {\n    this.modules[row] = new Array(this.moduleCount);\n\n    for (var col = 0; col < this.moduleCount; col++) {\n      this.modules[row][col] = null; //(col + row) % 3;\n    }\n  }\n\n  this.setupPositionProbePattern(0, 0);\n  this.setupPositionProbePattern(this.moduleCount - 7, 0);\n  this.setupPositionProbePattern(0, this.moduleCount - 7);\n  this.setupPositionAdjustPattern();\n  this.setupTimingPattern();\n  this.setupTypeInfo(test, maskPattern);\n\n  if (this.typeNumber >= 7) {\n    this.setupTypeNumber(test);\n  }\n\n  if (this.dataCache == null) {\n    this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n  }\n\n  this.mapData(this.dataCache, maskPattern);\n};\n\nproto.setupPositionProbePattern = function (row, col) {\n  for (var r = -1; r <= 7; r++) {\n    if (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n    for (var c = -1; c <= 7; c++) {\n      if (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n      if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n        this.modules[row + r][col + c] = true;\n      } else {\n        this.modules[row + r][col + c] = false;\n      }\n    }\n  }\n};\n\nproto.getBestMaskPattern = function () {\n  var minLostPoint = 0;\n  var pattern = 0;\n\n  for (var i = 0; i < 8; i++) {\n    this.makeImpl(true, i);\n    var lostPoint = util.getLostPoint(this);\n\n    if (i == 0 || minLostPoint > lostPoint) {\n      minLostPoint = lostPoint;\n      pattern = i;\n    }\n  }\n\n  return pattern;\n};\n\nproto.createMovieClip = function (target_mc, instance_name, depth) {\n  var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n  var cs = 1;\n  this.make();\n\n  for (var row = 0; row < this.modules.length; row++) {\n    var y = row * cs;\n\n    for (var col = 0; col < this.modules[row].length; col++) {\n      var x = col * cs;\n      var dark = this.modules[row][col];\n\n      if (dark) {\n        qr_mc.beginFill(0, 100);\n        qr_mc.moveTo(x, y);\n        qr_mc.lineTo(x + cs, y);\n        qr_mc.lineTo(x + cs, y + cs);\n        qr_mc.lineTo(x, y + cs);\n        qr_mc.endFill();\n      }\n    }\n  }\n\n  return qr_mc;\n};\n\nproto.setupTimingPattern = function () {\n  for (var r = 8; r < this.moduleCount - 8; r++) {\n    if (this.modules[r][6] != null) {\n      continue;\n    }\n\n    this.modules[r][6] = r % 2 == 0;\n  }\n\n  for (var c = 8; c < this.moduleCount - 8; c++) {\n    if (this.modules[6][c] != null) {\n      continue;\n    }\n\n    this.modules[6][c] = c % 2 == 0;\n  }\n};\n\nproto.setupPositionAdjustPattern = function () {\n  var pos = util.getPatternPosition(this.typeNumber);\n\n  for (var i = 0; i < pos.length; i++) {\n    for (var j = 0; j < pos.length; j++) {\n      var row = pos[i];\n      var col = pos[j];\n\n      if (this.modules[row][col] != null) {\n        continue;\n      }\n\n      for (var r = -2; r <= 2; r++) {\n        for (var c = -2; c <= 2; c++) {\n          if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n            this.modules[row + r][col + c] = true;\n          } else {\n            this.modules[row + r][col + c] = false;\n          }\n        }\n      }\n    }\n  }\n};\n\nproto.setupTypeNumber = function (test) {\n  var bits = util.getBCHTypeNumber(this.typeNumber);\n\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n  }\n\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n  }\n};\n\nproto.setupTypeInfo = function (test, maskPattern) {\n  var data = this.errorCorrectLevel << 3 | maskPattern;\n  var bits = util.getBCHTypeInfo(data); // vertical\t\t\n\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n\n    if (i < 6) {\n      this.modules[i][8] = mod;\n    } else if (i < 8) {\n      this.modules[i + 1][8] = mod;\n    } else {\n      this.modules[this.moduleCount - 15 + i][8] = mod;\n    }\n  } // horizontal\n\n\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n\n    if (i < 8) {\n      this.modules[8][this.moduleCount - i - 1] = mod;\n    } else if (i < 9) {\n      this.modules[8][15 - i - 1 + 1] = mod;\n    } else {\n      this.modules[8][15 - i - 1] = mod;\n    }\n  } // fixed module\n\n\n  this.modules[this.moduleCount - 8][8] = !test;\n};\n\nproto.mapData = function (data, maskPattern) {\n  var inc = -1;\n  var row = this.moduleCount - 1;\n  var bitIndex = 7;\n  var byteIndex = 0;\n\n  for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n    if (col == 6) col--;\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (this.modules[row][col - c] == null) {\n          var dark = false;\n\n          if (byteIndex < data.length) {\n            dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n          }\n\n          var mask = util.getMask(maskPattern, row, col - c);\n\n          if (mask) {\n            dark = !dark;\n          }\n\n          this.modules[row][col - c] = dark;\n          bitIndex--;\n\n          if (bitIndex == -1) {\n            byteIndex++;\n            bitIndex = 7;\n          }\n        }\n      }\n\n      row += inc;\n\n      if (row < 0 || this.moduleCount <= row) {\n        row -= inc;\n        inc = -inc;\n        break;\n      }\n    }\n  }\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n  var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n  var buffer = new BitBuffer();\n\n  for (var i = 0; i < dataList.length; i++) {\n    var data = dataList[i];\n    buffer.put(data.mode, 4);\n    buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n    data.write(buffer);\n  } // calc num max data.\n\n\n  var totalDataCount = 0;\n\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalDataCount += rsBlocks[i].dataCount;\n  }\n\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\n    throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n  } // end code\n\n\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4);\n  } // padding\n\n\n  while (buffer.getLengthInBits() % 8 != 0) {\n    buffer.putBit(false);\n  } // padding\n\n\n  while (true) {\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n\n    buffer.put(QRCode.PAD0, 8);\n\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n\n    buffer.put(QRCode.PAD1, 8);\n  }\n\n  return QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function (buffer, rsBlocks) {\n  var offset = 0;\n  var maxDcCount = 0;\n  var maxEcCount = 0;\n  var dcdata = new Array(rsBlocks.length);\n  var ecdata = new Array(rsBlocks.length);\n\n  for (var r = 0; r < rsBlocks.length; r++) {\n    var dcCount = rsBlocks[r].dataCount;\n    var ecCount = rsBlocks[r].totalCount - dcCount;\n    maxDcCount = Math.max(maxDcCount, dcCount);\n    maxEcCount = Math.max(maxEcCount, ecCount);\n    dcdata[r] = new Array(dcCount);\n\n    for (var i = 0; i < dcdata[r].length; i++) {\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    }\n\n    offset += dcCount;\n    var rsPoly = util.getErrorCorrectPolynomial(ecCount);\n    var rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n    var modPoly = rawPoly.mod(rsPoly);\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\n\n    for (var i = 0; i < ecdata[r].length; i++) {\n      var modIndex = i + modPoly.getLength() - ecdata[r].length;\n      ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n    }\n  }\n\n  var totalCodeCount = 0;\n\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalCodeCount += rsBlocks[i].totalCount;\n  }\n\n  var data = new Array(totalCodeCount);\n  var index = 0;\n\n  for (var i = 0; i < maxDcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < dcdata[r].length) {\n        data[index++] = dcdata[r][i];\n      }\n    }\n  }\n\n  for (var i = 0; i < maxEcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < ecdata[r].length) {\n        data[index++] = ecdata[r][i];\n      }\n    }\n  }\n\n  return data;\n};\n\nmodule.exports = QRCode;","map":{"version":3,"names":["BitByte","require","RSBlock","BitBuffer","util","Polynomial","QRCode","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","proto","prototype","addData","data","newData","push","isDark","row","col","Error","getModuleCount","make","rsBlocks","getRSBlocks","buffer","totalDataCount","i","length","dataCount","put","mode","getLength","getLengthInBits","write","makeImpl","getBestMaskPattern","test","maskPattern","Array","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","y","x","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","modPoly","modIndex","get","totalCodeCount","index","module","exports"],"sources":["C:/Users/Admin/Desktop/Strike_API/node_modules/qr.js/lib/QRCode.js"],"sourcesContent":["var BitByte = require('./8BitByte');\r\nvar RSBlock = require('./RSBlock');\r\nvar BitBuffer = require('./BitBuffer');\r\nvar util = require('./util');\r\nvar Polynomial = require('./Polynomial');\r\n\r\nfunction QRCode(typeNumber, errorCorrectLevel) {\r\n\tthis.typeNumber = typeNumber;\r\n\tthis.errorCorrectLevel = errorCorrectLevel;\r\n\tthis.modules = null;\r\n\tthis.moduleCount = 0;\r\n\tthis.dataCache = null;\r\n\tthis.dataList = [];\r\n}\r\n\r\n// for client side minification\r\nvar proto = QRCode.prototype;\r\n\r\nproto.addData = function(data) {\r\n\tvar newData = new BitByte(data);\r\n\tthis.dataList.push(newData);\r\n\tthis.dataCache = null;\r\n};\r\n\r\nproto.isDark = function(row, col) {\r\n\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\r\n\t\tthrow new Error(row + \",\" + col);\r\n\t}\r\n\treturn this.modules[row][col];\r\n};\r\n\r\nproto.getModuleCount = function() {\r\n\treturn this.moduleCount;\r\n};\r\n\r\nproto.make = function() {\r\n\t// Calculate automatically typeNumber if provided is < 1\r\n\tif (this.typeNumber < 1 ){\r\n\t\tvar typeNumber = 1;\r\n\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\r\n\t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\r\n\r\n\t\t\tvar buffer = new BitBuffer();\r\n\t\t\tvar totalDataCount = 0;\r\n\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\r\n\t\t\t\tvar data = this.dataList[i];\r\n\t\t\t\tbuffer.put(data.mode, 4);\r\n\t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\r\n\t\t\t\tdata.write(buffer);\r\n\t\t\t}\r\n\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.typeNumber = typeNumber;\r\n\t}\r\n\tthis.makeImpl(false, this.getBestMaskPattern() );\r\n};\r\n\r\nproto.makeImpl = function(test, maskPattern) {\r\n\t\r\n\tthis.moduleCount = this.typeNumber * 4 + 17;\r\n\tthis.modules = new Array(this.moduleCount);\r\n\t\r\n\tfor (var row = 0; row < this.moduleCount; row++) {\r\n\t\t\r\n\t\tthis.modules[row] = new Array(this.moduleCount);\r\n\t\t\r\n\t\tfor (var col = 0; col < this.moduleCount; col++) {\r\n\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setupPositionProbePattern(0, 0);\r\n\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\r\n\tthis.setupPositionAdjustPattern();\r\n\tthis.setupTimingPattern();\r\n\tthis.setupTypeInfo(test, maskPattern);\r\n\t\r\n\tif (this.typeNumber >= 7) {\r\n\t\tthis.setupTypeNumber(test);\r\n\t}\r\n\r\n\tif (this.dataCache == null) {\r\n\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\r\n\t}\r\n\r\n\tthis.mapData(this.dataCache, maskPattern);\r\n};\r\n\r\nproto.setupPositionProbePattern = function(row, col)  {\r\n\t\r\n\tfor (var r = -1; r <= 7; r++) {\r\n\t\t\r\n\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n\t\t\r\n\t\tfor (var c = -1; c <= 7; c++) {\r\n\t\t\t\r\n\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n\t\t\t\r\n\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\r\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\r\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\r\n\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\t\t\r\n};\r\n\r\nproto.getBestMaskPattern = function() {\r\n\r\n\tvar minLostPoint = 0;\r\n\tvar pattern = 0;\r\n\r\n\tfor (var i = 0; i < 8; i++) {\r\n\t\t\r\n\t\tthis.makeImpl(true, i);\r\n\r\n\t\tvar lostPoint = util.getLostPoint(this);\r\n\r\n\t\tif (i == 0 || minLostPoint >  lostPoint) {\r\n\t\t\tminLostPoint = lostPoint;\r\n\t\t\tpattern = i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn pattern;\r\n};\r\n\r\nproto.createMovieClip = function(target_mc, instance_name, depth) {\r\n\r\n\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\r\n\tvar cs = 1;\r\n\r\n\tthis.make();\r\n\r\n\tfor (var row = 0; row < this.modules.length; row++) {\r\n\t\t\r\n\t\tvar y = row * cs;\r\n\t\t\r\n\t\tfor (var col = 0; col < this.modules[row].length; col++) {\r\n\r\n\t\t\tvar x = col * cs;\r\n\t\t\tvar dark = this.modules[row][col];\r\n\t\t\r\n\t\t\tif (dark) {\r\n\t\t\t\tqr_mc.beginFill(0, 100);\r\n\t\t\t\tqr_mc.moveTo(x, y);\r\n\t\t\t\tqr_mc.lineTo(x + cs, y);\r\n\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\r\n\t\t\t\tqr_mc.lineTo(x, y + cs);\r\n\t\t\t\tqr_mc.endFill();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn qr_mc;\r\n};\r\n\r\nproto.setupTimingPattern = function() {\r\n\t\r\n\tfor (var r = 8; r < this.moduleCount - 8; r++) {\r\n\t\tif (this.modules[r][6] != null) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tthis.modules[r][6] = (r % 2 == 0);\r\n\t}\r\n\r\n\tfor (var c = 8; c < this.moduleCount - 8; c++) {\r\n\t\tif (this.modules[6][c] != null) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tthis.modules[6][c] = (c % 2 == 0);\r\n\t}\r\n};\r\n\r\nproto.setupPositionAdjustPattern = function() {\r\n\r\n\tvar pos = util.getPatternPosition(this.typeNumber);\r\n\t\r\n\tfor (var i = 0; i < pos.length; i++) {\r\n\t\r\n\t\tfor (var j = 0; j < pos.length; j++) {\r\n\t\t\r\n\t\t\tvar row = pos[i];\r\n\t\t\tvar col = pos[j];\r\n\t\t\t\r\n\t\t\tif (this.modules[row][col] != null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (var r = -2; r <= 2; r++) {\r\n\t\t\t\r\n\t\t\t\tfor (var c = -2; c <= 2; c++) {\r\n\t\t\t\t\r\n\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\r\n\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\r\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nproto.setupTypeNumber = function(test) {\r\n\r\n\tvar bits = util.getBCHTypeNumber(this.typeNumber);\r\n\r\n\tfor (var i = 0; i < 18; i++) {\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n\t}\r\n\r\n\tfor (var i = 0; i < 18; i++) {\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n\t}\r\n};\r\n\r\nproto.setupTypeInfo = function(test, maskPattern) {\r\n\r\n\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\r\n\tvar bits = util.getBCHTypeInfo(data);\r\n\r\n\t// vertical\t\t\r\n\tfor (var i = 0; i < 15; i++) {\r\n\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\r\n\t\tif (i < 6) {\r\n\t\t\tthis.modules[i][8] = mod;\r\n\t\t} else if (i < 8) {\r\n\t\t\tthis.modules[i + 1][8] = mod;\r\n\t\t} else {\r\n\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\r\n\t\t}\r\n\t}\r\n\r\n\t// horizontal\r\n\tfor (var i = 0; i < 15; i++) {\r\n\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\t\r\n\t\tif (i < 8) {\r\n\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\r\n\t\t} else if (i < 9) {\r\n\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\r\n\t\t} else {\r\n\t\t\tthis.modules[8][15 - i - 1] = mod;\r\n\t\t}\r\n\t}\r\n\r\n\t// fixed module\r\n\tthis.modules[this.moduleCount - 8][8] = (!test);\r\n};\r\n\r\nproto.mapData = function(data, maskPattern) {\r\n\t\r\n\tvar inc = -1;\r\n\tvar row = this.moduleCount - 1;\r\n\tvar bitIndex = 7;\r\n\tvar byteIndex = 0;\r\n\t\r\n\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\r\n\r\n\t\tif (col == 6) col--;\r\n\r\n\t\twhile (true) {\r\n\r\n\t\t\tfor (var c = 0; c < 2; c++) {\r\n\t\t\t\t\r\n\t\t\t\tif (this.modules[row][col - c] == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar dark = false;\r\n\r\n\t\t\t\t\tif (byteIndex < data.length) {\r\n\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\r\n\r\n\t\t\t\t\tif (mask) {\r\n\t\t\t\t\t\tdark = !dark;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.modules[row][col - c] = dark;\r\n\t\t\t\t\tbitIndex--;\r\n\r\n\t\t\t\t\tif (bitIndex == -1) {\r\n\t\t\t\t\t\tbyteIndex++;\r\n\t\t\t\t\t\tbitIndex = 7;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\trow += inc;\r\n\r\n\t\t\tif (row < 0 || this.moduleCount <= row) {\r\n\t\t\t\trow -= inc;\r\n\t\t\t\tinc = -inc;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nQRCode.PAD0 = 0xEC;\r\nQRCode.PAD1 = 0x11;\r\n\r\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\r\n\t\r\n\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\r\n\t\r\n\tvar buffer = new BitBuffer();\r\n\t\r\n\tfor (var i = 0; i < dataList.length; i++) {\r\n\t\tvar data = dataList[i];\r\n\t\tbuffer.put(data.mode, 4);\r\n\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\r\n\t\tdata.write(buffer);\r\n\t}\r\n\r\n\t// calc num max data.\r\n\tvar totalDataCount = 0;\r\n\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t}\r\n\r\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\r\n\t\tthrow new Error(\"code length overflow. (\"\r\n\t\t\t+ buffer.getLengthInBits()\r\n\t\t\t+ \">\"\r\n\t\t\t+  totalDataCount * 8\r\n\t\t\t+ \")\");\r\n\t}\r\n\r\n\t// end code\r\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n\t\tbuffer.put(0, 4);\r\n\t}\r\n\r\n\t// padding\r\n\twhile (buffer.getLengthInBits() % 8 != 0) {\r\n\t\tbuffer.putBit(false);\r\n\t}\r\n\r\n\t// padding\r\n\twhile (true) {\r\n\t\t\r\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tbuffer.put(QRCode.PAD0, 8);\r\n\t\t\r\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tbuffer.put(QRCode.PAD1, 8);\r\n\t}\r\n\r\n\treturn QRCode.createBytes(buffer, rsBlocks);\r\n};\r\n\r\nQRCode.createBytes = function(buffer, rsBlocks) {\r\n\r\n\tvar offset = 0;\r\n\t\r\n\tvar maxDcCount = 0;\r\n\tvar maxEcCount = 0;\r\n\t\r\n\tvar dcdata = new Array(rsBlocks.length);\r\n\tvar ecdata = new Array(rsBlocks.length);\r\n\t\r\n\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\r\n\t\tvar dcCount = rsBlocks[r].dataCount;\r\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\r\n\r\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\r\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\r\n\t\t\r\n\t\tdcdata[r] = new Array(dcCount);\r\n\t\t\r\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\r\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n\t\t}\r\n\t\toffset += dcCount;\r\n\t\t\r\n\t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\r\n\t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\r\n\r\n\t\tvar modPoly = rawPoly.mod(rsPoly);\r\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\r\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\r\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tvar totalCodeCount = 0;\r\n\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\r\n\t}\r\n\r\n\tvar data = new Array(totalCodeCount);\r\n\tvar index = 0;\r\n\r\n\tfor (var i = 0; i < maxDcCount; i++) {\r\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\t\t\tif (i < dcdata[r].length) {\r\n\t\t\t\tdata[index++] = dcdata[r][i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor (var i = 0; i < maxEcCount; i++) {\r\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\t\t\tif (i < ecdata[r].length) {\r\n\t\t\t\tdata[index++] = ecdata[r][i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn data;\r\n};\r\n\r\nmodule.exports = QRCode;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}