[{"C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\App.js":"3","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\GetAccount.js":"4","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\DisplayAccount.js":"5","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\QRCard.js":"6","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\CreateInvoice.js":"7","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\CountdownTimer.js":"8","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\hooks\\useCountdown.js":"9"},{"size":552,"mtime":1695217708350,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1695217708350,"results":"12","hashOfConfig":"11"},{"size":1528,"mtime":1695662543549,"results":"13","hashOfConfig":"11"},{"size":1008,"mtime":1695391744354,"results":"14","hashOfConfig":"11"},{"size":1379,"mtime":1695669058769,"results":"15","hashOfConfig":"11"},{"size":965,"mtime":1695669519655,"results":"16","hashOfConfig":"11"},{"size":1126,"mtime":1695670025954,"results":"17","hashOfConfig":"11"},{"size":1266,"mtime":1695390882696,"results":"18","hashOfConfig":"11"},{"size":926,"mtime":1695217708350,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ivfke",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\index.js",[],[],"C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\App.js",["53","54","55","56","57"],[],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, {useState, useEffect} from 'react'\r\nimport io from 'socket.io-client';\r\nimport GetAccount from './GetAccount.js'\r\nimport DisplayAccount from './DisplayAccount'\r\nimport QRCard from './QRCard'\r\n\r\nfunction App() {\r\n\r\nconst socket = io();\r\n\r\nconst [userInfo, setUserInfo] = useState();\r\nconst [invoiceAndQuote, setInvoiceAndQuote] = useState();\r\nconst [paidIndicator, setPaidIndicator] = useState(false);\r\n\r\nsocket.on('message', (res) => {\r\n  //console.log(res);\r\n  handleSocketMessage(res);\r\n})\r\n\r\nconst handleSocketMessage = (res) => {\r\n  console.log(invoiceAndQuote);\r\n  console.log(invoiceAndQuote.invoice.invoiceId);\r\n  console.log(res.invoiceId);\r\n  console.log(res.status);\r\n\r\n  if (res.invoiceId == invoiceAndQuote.invoice.invoiceId && res.status == 'PAID') {\r\n    setPaidIndicator(true);\r\n    setInvoiceAndQuote(null);\r\n  }\r\n}\r\n\r\nconst acceptUserInfo = (uInfo) => {\r\n  //console.log(uInfo);\r\n  setUserInfo(uInfo);\r\n}\r\n\r\nconst acceptInvoiceAndQuote = (invoiceObject) => {\r\n  //console.log(invoiceObject);\r\n  setInvoiceAndQuote(invoiceObject);\r\n  setPaidIndicator(false);\r\n}\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <h1></h1>\r\n      <GetAccount passUpUserInfo={acceptUserInfo}/>\r\n      {userInfo && <DisplayAccount passUpInvoice={acceptInvoiceAndQuote} userInfo = {userInfo} /> }\r\n      {invoiceAndQuote && <QRCard invoiceAndQuote={invoiceAndQuote}/>}\r\n      {paidIndicator && <h1> Transaccion exitosa. </h1>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\GetAccount.js",["58","59","60","61"],[],"import {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst GetAccount = props => {\r\n\r\n\tconst [userInfo, setUserInfo] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst getAccountInfo = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet data = JSON.stringify({\r\n\t\t\t\"handle\": 'ricardofv'\r\n\t\t})\r\n\r\n\t\tlet config = {\r\n\t\t\tmethod : 'post',\r\n\t\t\turl: '/api/getAccount',\r\n\t\t\theaders: {\r\n\t\t\t\t    'Content-Type': 'application/json', \r\n    \t\t\t\t'Accept': 'application/json'\r\n\t\t\t},\r\n\t\t\tdata : data\r\n\t\t};\r\n\r\n\t\taxios(config)\r\n\t\t.then((response) => {\r\n\t\t\tconsole.log(JSON.stringify(response.data))\r\n\t\t\tif (response.data != 'error') {\r\n\t\t\tsetUserInfo(response.data);\r\n\r\n\t\t\tprops.passUpUserInfo(response.data);\r\n\t\t\tsetError(false);\r\n\t\t\t} else {\r\n\t\t\tsetUserInfo(false);\r\n\t\t\tsetError('Usuario no encontrado')\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n  \t\tconsole.log(error);\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={getAccountInfo}>Play</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GetAccount;","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\DisplayAccount.js",["62","63","64","65"],[],"import React, {useState, useEffect} from 'react'\r\nimport CreateInvoice from './CreateInvoice.js'\r\nimport CountdownTimer from './CountdownTimer'\r\n\r\nconst DisplayAccount = props => {\r\n\r\n\tconst [handle, setHandle] = useState();\r\n\tconst [canReceive, setCanReceive] = useState();\r\n\tconst [currencyDisplay, setCurrencyDisplay] = useState();\r\n\tconst [invoiceAndQuote, setInvoiceAndQuote] = useState();\r\n\r\n\tconst passUpInvoice = (invoiceAndQuote) => {\r\n\t\tsetInvoiceAndQuote(invoiceAndQuote);\r\n\t\tprops.passUpInvoice(invoiceAndQuote);\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tif (props.userInfo) {\r\n\t\t\tconsole.log(props.userInfo);\r\n\t\t\tsetHandle(props.userInfo.handle);\r\n\t\t\tsetCanReceive(props.userInfo.canReceive? 'True' : 'False');\r\n\r\n\t\t\tsetCurrencyDisplay(\r\n\t\t\t\tprops.userInfo.currencies.map(curr=> {\r\n\t\t\t\t\tif (curr.isInvoiceable && curr.currency == \"USDT\"){\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='CurrencyDisplay' key={curr.currency}>\r\n\t\t\t\t\t\t\t<CreateInvoice currency={curr.currency} \r\n\t\t\t\t\t\t\t\thandle={props.userInfo.handle}\r\n\t\t\t\t\t\t\t\tpassUpInvoice={passUpInvoice}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} \r\n\t\t\t\t}))\r\n\t\t}\r\n\t\t\r\n\t}, [props])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='DisplayAccount'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p> {handle} </p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p> {canReceive} </p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{!invoiceAndQuote && currencyDisplay}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default DisplayAccount;","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\QRCard.js",["66"],[],"import React, {useState, useEffect} from 'react'\r\nimport CountdownTimer from './CountdownTimer'\r\nimport QRCode from 'react-qr-code'\r\n\r\nconst QRCard = (props) => {\r\n\r\n\tconst [expired, setExpired] = useState(false);\r\n\tconsole.log(props);\r\n\r\n\tconst timeInSeconds = props.invoiceAndQuote.quote.expirationInSec*1000;\r\n  \tconst NOW_IN_MS = new Date().getTime();\r\n\r\n  \tconst targetDate = NOW_IN_MS + timeInSeconds;\r\n\r\n  \tconst receiveExpiredNotice = (isExpired) => {\r\n  \t\tsetExpired(isExpired);\r\n  \t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!expired &&\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<h3> {props.invoiceAndQuote.quote.targetAmount.currency} : {props.invoiceAndQuote.quote.targetAmount.amount} </h3>\r\n\t\t\t\t\t<div className = 'QR'>\r\n\t\t\t\t\t\t<QRCode value={props.invoiceAndQuote.quote.lnInvoice}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3> </h3>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t}\r\n\t\t\t<CountdownTimer targetDate={targetDate} floatUpExpiredNotice={receiveExpiredNotice} />\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default QRCard;\r\n\r\n","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\CreateInvoice.js",["67","68"],[],"C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\CountdownTimer.js",["69"],[],"import React from 'react';\r\nimport { useCountdown } from './hooks/useCountdown';\r\n\r\nconst ExpiredNotice = () => {\r\n  return (\r\n    <div className=\"expired-notice\">\r\n      <span>CADUCADO</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DateTimeDisplay = ({ value, type, isDanger }) => {\r\n  return (\r\n    <div className={isDanger ? 'countdown danger' : 'countdown'}>\r\n      <p>{value}</p>\r\n      <span>{type}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ShowCounter = ({ days, hours, minutes, seconds }) => {\r\n  return (\r\n    <div className=\"show-counter\">\r\n      <a className=\"countdown-link\">\r\n      <p> Caduca en: </p>\r\n        <DateTimeDisplay value={minutes} type={'Mins'} isDanger={false} />\r\n        <p>:</p>\r\n        <DateTimeDisplay value={seconds} type={'Seconds'} isDanger={false} />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CountdownTimer = ({ targetDate, floatUpExpiredNotice }) => {\r\n  const [days, hours, minutes, seconds] = useCountdown(targetDate);\r\n\r\n  if (days + hours + minutes + seconds <= 0) {\r\n    floatUpExpiredNotice(true);\r\n    return <ExpiredNotice />;\r\n  } else {\r\n    return (\r\n      <ShowCounter\r\n        days={days}\r\n        hours={hours}\r\n        minutes={minutes}\r\n        seconds={seconds}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default CountdownTimer;","C:\\Users\\Admin\\Desktop\\Strike_API\\client\\src\\hooks\\useCountdown.js",["70"],[],"import { useEffect, useState } from 'react';\r\n\r\nconst useCountdown = (targetDate) => {\r\n  const countDownDate = new Date(targetDate).getTime();\r\n\r\n  const [countDown, setCountDown] = useState(\r\n    countDownDate - new Date().getTime()\r\n  );\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCountDown(countDownDate - new Date().getTime());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return getReturnValues(countDown);\r\n};\r\n\r\nconst getReturnValues = (countDown) => {\r\n  // calculate time left\r\n  const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor(\r\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  );\r\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\r\n\r\n  return [days, hours, minutes, seconds];\r\n};\r\n\r\nexport { useCountdown };",{"ruleId":"71","severity":1,"message":"72","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":12},{"ruleId":"71","severity":1,"message":"75","line":3,"column":26,"nodeType":"73","messageId":"74","endLine":3,"endColumn":35},{"ruleId":"76","severity":1,"message":"77","line":28,"column":21,"nodeType":"78","messageId":"79","endLine":28,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":28,"column":72,"nodeType":"78","messageId":"79","endLine":28,"endColumn":74},{"ruleId":"80","severity":1,"message":"81","line":47,"column":5,"nodeType":"82","endLine":47,"endColumn":9},{"ruleId":"71","severity":1,"message":"75","line":1,"column":9,"nodeType":"73","messageId":"74","endLine":1,"endColumn":18},{"ruleId":"71","severity":1,"message":"83","line":6,"column":9,"nodeType":"73","messageId":"74","endLine":6,"endColumn":17},{"ruleId":"71","severity":1,"message":"84","line":7,"column":9,"nodeType":"73","messageId":"74","endLine":7,"endColumn":14},{"ruleId":"76","severity":1,"message":"85","line":28,"column":22,"nodeType":"78","messageId":"79","endLine":28,"endColumn":24},{"ruleId":"71","severity":1,"message":"86","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":22},{"ruleId":"87","severity":1,"message":"88","line":24,"column":39,"nodeType":"89","messageId":"90","endLine":24,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":25,"column":46,"nodeType":"78","messageId":"79","endLine":25,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":38,"column":5,"nodeType":"93","endLine":38,"endColumn":12,"suggestions":"94"},{"ruleId":"71","severity":1,"message":"75","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":35},{"ruleId":"71","severity":1,"message":"95","line":1,"column":16,"nodeType":"73","messageId":"74","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"75","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":35},{"ruleId":"96","severity":1,"message":"97","line":24,"column":7,"nodeType":"82","endLine":24,"endColumn":37},{"ruleId":"91","severity":1,"message":"98","line":16,"column":6,"nodeType":"93","endLine":16,"endColumn":8,"suggestions":"99"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'userInfo' is assigned a value but never used.","'error' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'CountdownTimer' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'passUpInvoice'. Either include it or remove the dependency array.","ArrayExpression",["100"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'countDownDate'. Either include it or remove the dependency array.",["101"],{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [passUpInvoice, props]",{"range":"106","text":"107"},"Update the dependencies array to be: [countDownDate]",{"range":"108","text":"109"},[1108,1115],"[passUpInvoice, props]",[431,433],"[countDownDate]"]